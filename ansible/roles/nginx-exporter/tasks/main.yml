---
# tasks file for roles/nginx-exporter
- name: check if nginx exporter exist
  stat:
    path: "{{ nginx_exporter_bin }}"
  register: __check_nginx_exporter_present
  
- name: create nginx exporter user
  user:
    name: "{{ nginx_exporter_user }}"
    append: true
    shell: /usr/sbin/nologin
    system: true
    create_home: false
- name: create nginx exporter config dir
  file:
    path: "{{ nginx_exporter_dir_conf }}"
    state: directory
    owner: "{{ nginx_exporter_user }}"
    group: "{{ nginx_exporter_group }}"
- name: if nginx exporter exist get version
  shell: "cat /etc/systemd/system/nginx_exporter.service | grep Version | sed s/'.*Version '//g"
  when: __check_nginx_exporter_present.stat.exists == true
  changed_when: false
  register: __get_nginx_exporter_version
  
- name: download and unzip nginx exporter if not exist
  unarchive:
    src: "https://github.com/nginxinc/nginx-prometheus-exporter/releases/download/v{{ nginx_exporter_version }}/nginx-prometheus-exporter_{{ nginx_exporter_version }}_linux_amd64.tar.gz"
    dest: /tmp/
    remote_src: yes
    validate_certs: no
- name: move the binary to the final destination
  copy:
    src: "/tmp/nginx-prometheus-exporter" 
    dest: "{{ nginx_exporter_bin }}"
    owner: "{{ nginx_exporter_user }}"
    group: "{{ nginx_exporter_group }}"
    mode: 0755
    remote_src: yes
  when: __check_nginx_exporter_present.stat.exists == false or not __get_nginx_exporter_version.stdout == nginx_exporter_version
- name: clean
  file:
    path: "/tmp/nginx-prometheus-exporter" 
    state: absent
- name: install service
  template:
    src: nginx_exporter.service.j2
    dest: /etc/systemd/system/nginx_exporter.service
    owner: root
    group: root
    mode: 0755
  notify: reload_daemon_and_restart_nginx_exporter
- meta: flush_handlers
- name: service always started
  systemd:
    name: nginx_exporter
    state: started
    enabled: yes